хабр
открыть
список
стать
автором
потоки
разработка
администрирование
дизайн
менеджмент
маркетинг
научпоп
поиск
профиль
обновить
оценка
компании
карьере
рейтинг
southbridge
обеспечиваем
стабильную
работу
highload
проектов
anna
sokol
часов
мир
приключений
api
серверу
kubernetes
часть
наблюдение
кэширование
прочтение
мин
количество
просмотров
блог
инфраструктура
devops
перевод
автор
оригинала
daniel
mangum
нашей
предыдущей
статье
приключения
сервера
рассмотрели
интерфейс
хранилища
исследовали
единственную
реализацию
дереве
etcd
внимательное
сносок
посте
показало
честными
говоря
единственная
реализация
оспорить
cacher
технической
реализацией
требуется
базовая
подробно
рассмотрим
одном
будущих
постов
изучим
возможности
ч
поговорим
хочу
проблему
решение
смотрят
watchcache
cacherlisterwatcher
reflector
свяжем
вс
вместе
метод
watch
успешно
покажите
код
прежде
введем
либо
тип
кэширования
стоит
вернуться
факту
storage
interface
включает
поддерживает
ранее
изучали
возможность
отслеживания
изменений
обращаясь
непосредственно
помощью
etcdctl
предлагает
использует
двунаправленные
grpc
доставки
событий
клиентам
изменении
значения
ключа
создает
поддерживаемый
watcher
новый
создается
каждом
вызове
сути
вызывает
пересылает
события
каналу
давайте
возьмем
нашу
программу
предыдущего
поста
модифицируем
отслеживать
изменения
configmaps
кластере
можете
найти
инструкции
получить
данные
pci
необходимые
связи
kind
directwatch
package
main
import
context
fmt
io
client
pkg
transport
clientv
s
core
apimachinery
runtime
serializer
apiserver
encrypt
identity
apis
sv
func
tlsconfig
err
tlsinfo
certfile
pki
server
crt
keyfile
key
trustedcafile
ca
clientcertfile
clientkeyfile
clientconfig
nil
panic
c
config
endpoints
string
https
tls
scheme
newscheme
addtoscheme
f
newcodecfactory
codecforversions
universaldecoder
schemegroupversion
registry
resource
configmap
newencryptchecktransformer
true
newdefaultleasemanagerconfig
w
background
listoptions
predicate
recursive
e
range
resultchan
object
a
map
printf
n
type
namespace
обратите
внимание
факт
регистрируем
типы
скорее
выполнить
преобразование
internal
версии
желаемую
версию
передаем
поскольку
декодируем
чтении
потока
запущен
кластер
начать
перенаправление
портов
pod
kubectl
port
kube
system
control
plane
можем
run
added
default
root
node
lease
public
cluster
info
coredns
extension
authentication
proxy
kubeadm
kubelet
local
path
ожидалось
получаем
находящихся
данный
момент
создавать
обновлять
удалять
увидеть
отражаются
потоке
просмотра
create
asa
literal
world
created
o
yaml
dry
apply
configured
delete
deleted
посмотрим
соответствующим
типом
modified
общее
получать
любое
меняется
интересующий
похоже
маленькая
программа
сильно
потеют
взглянем
некоторые
показатели
убедиться
открытый
адрес
метрик
нашем
просмотрев
команду
контейнера
модуле
jsonpath
spec
containers
command
jq
advertise
urls
cert
file
auth
data
dir
var
lib
experimental
initial
corrupt
check
progress
notify
interval
peer
listen
metrics
http
trusted
snapshot
count
ищем
обслуживать
prometheus
конечной
точке
адресу
созда
минимальный
конфигурационный
файл
дать
сборщику
очистку
yml
global
scrape
configs
job
static
targets
запустим
убедитесь
доступ
пространство
имен
host
network
позволит
запускать
пространстве
упрощает
панели
мониторинга
браузере
перенесите
конечную
точку
запустите
контейнер
подключ
нный
сети
хоста
docker
net
rm
pwd
prom
панель
должна
доступна
график
показателей
предоставляет
введя
запрос
например
irate
process
cpu
seconds
total
m
покажет
скорость
увеличения
общего
системного
пользовательского
процессорного
запустить
устанавливает
просмотры
увидим
существенного
влияния
процессор
диапазон
оси
y
составляет
примечание
запускаем
сервер
компоненты
взаимодействуют
ним
дополнение
нагрузке
программы
следовало
ожидать
одни
часы
вряд
окажут
существенное
влияние
увеличим
начнем
сталкиваться
проблемами
настроим
запускала
manydirectwatch
os
signal
i
stop
chan
interrupt
должны
получают
создадим
новую
сможем
уведомления
manysimplewatch
testing
оглядываясь
видим
значительный
скачок
производительности
процессора
запуске
беспокойство
возможно
неприятным
является
объем
работы
проделан
создании
новой
нагрузка
моделируется
программе
обслуживает
запросы
просмотр
различных
клиентов
устанавливать
каждого
необходимости
одно
уведомление
проинформировать
значений
большой
всплеск
соответствует
моменту
запуска
меньший
созданию
единой
установленными
наблюдениями
догадались
стратегию
решения
проблемы
взаимодействие
слоем
многом
прямой
вызов
фактически
уровень
реализует
построении
передается
структура
указано
строке
документа
implements
calls
delegated
underlying
информирует
наблюдателя
событиях
создания
напрямую
ctx
obj
ttl
uint
error
return
методы
выполняют
незначительные
операции
вызовом
базового
вообще
взаимодействует
вместо
cachewatcher
запускает
свой
цикл
обработки
разобраться
работает
понять
доставляются
наблюдателям
запущенным
методом
создаются
важных
базовых
компонента
общих
интерфейсов
пакете
cache
store
listerwatcher
принимает
реализации
упомянутых
последний
заполнения
первого
место
хранится
фактический
кэш
передаются
скользящее
окно
возможностью
размера
означает
добавлении
нового
элемента
удаляем
самый
старый
увеличиваем
размер
кэша
вместить
добавление
упоминалось
которое
следующие
add
adds
accumulator
update
updates
deletes
list
returns
empty
accumulators
listkeys
keys
item
exists
bool
getbykey
replace
contents
takes
ownership
reference
calling
function
resync
meaningless
terms
appearing
meaning
implementations
trivial
additional
behavior
g
deltafifo
создают
event
передайте
методу
processevent
событие
преобразуется
watchcacheevent
updatecache
вызываемым
resizecachelocked
реализована
логика
скользящего
окна
assumes
lock
held
write
recordtime
iscachefulllocked
full
remove
oldest
element
startindex
endindex
capacity
resizes
increases
x
cached
events
occurred
eventfreshduration
decreases
quarter
protect
flapping
eventtime
time
min
upperboundcapacity
docacheresizelocked
max
lowerboundcapacity
возвратом
вызывается
функция
eventhandler
передана
построения
вернемся
вскоре
наблюдатели
уведомляются
avoid
handler
safe
long
call
updateresourceversion
flight
point
synchronously
thread
wcevent
включают
получение
перечисление
полагаются
базовый
indexer
итоге
простые
индексы
созданные
сводятся
потокобезопасной
помогает
отправлять
обновления
многим
различным
индексатор
позволяет
новым
легко
последнее
состояние
объектов
наблюдения
механизма
обслуживают
памяти
обращаться
намного
проще
оборачивает
базовые
getlist
newcacherlisterwatcher
backed
resourceprefix
newlistfunc
lw
options
metav
pred
selectionpredicate
label
labels
field
fields
limit
continue
storageopts
resourceversionmatch
todo
opts
resourceversion
progressnotify
извлекает
сохраняются
нужен
механизм
связать
передать
newwatchcache
keyfunc
getattrsfunc
versioner
indexers
clock
groupresource
reflectorname
newnamedreflector
определен
tools
следующей
документальной
строкой
watches
reflected
большая
функциональности
метода
listandwatch
выполняет
следует
названия
перечисляет
просматривает
поступающие
обрабатываются
watchhandler
case
utilruntime
handleerror
errorf
unable
consumers
access
state
passed
change
связываем
месте
извлекать
сохранять
информировать
обновлениях
dispatchevents
stopwg
defer
terminateallwatchers
wait
isstopped
startcaching
stopch
вызова
stopchannel
struct
usable
rlock
successful
disconnection
start
locked
onreplace
unlock
exits
due
cycle
repeat
needed
successfullist
false
setonreplace
ready
set
klog
infof
initialized
watchcacheinitializations
withlabelvalues
note
called
errors
explicitly
retry
loop
unexpected
reinitializing
приведет
начнет
заполнять
уведомит
отправить
передан
видели
curlen
int
len
incoming
incominghwm
monitor
objects
queued
channel
отправляется
считывается
методе
отправленным
каждому
наблюдателю
don
t
dispatch
bookmarks
coming
layer
frequent
level
subseconds
efficient
resumption
restarts
propagating
overload
decide
performance
scalability
footprint
acceptable
place
hook
result
bookmark
regular
operation
checking
changed
dispatchevent
lastprocessedresourceversion
eventscounter
вызываем
фильтруется
заинтересован
данном
событии
непросто
знаем
пришло
создаем
добавляется
кандидатам
обрабатывает
имеет
собственный
processinterval
добавления
наблюдателей
forget
compute
forgetwatcher
watcheridx
triggervalue
triggersupported
watchers
addwatcher
queue
support
allowwatchbookmarks
bookmarkwatchers
cacheinterval
watchrv
доставляет
любые
существующие
интересуют
начинает
отправленных
warningf
couldn
retrieve
serve
break
sendwatchcacheevent
buffered
processed
won
delivered
causing
initeventcount
комментарии
коду
удалены
краткости
обработка
состоит
функции
преобразует
становится
каналом
вызывающие
функцию
считывать
watchevent
converttowatchevent
interested
select
продуктивно
действии
бер
cachewatch
utils
newcacherfromconfig
apiobjectversioner
namespacekeyfunc
newfunc
configmaplist
codec
legacycodec
realclock
switch
cacheableobject
unknown
getobject
очищает
экземпляр
установлено
экземпляре
заметного
самое
справедливо
заключительные
мысли
вторая
серии
основываясь
узнали
оптимизирует
лицом
потенциально
большого
количества
большинстве
случаев
разработке
программного
обеспечения
оптимизация
лишена
компромиссов
достигает
цели
сделать
общий
случай
эффективным
мега
рассматриваем
затрагиваем
области
управления
инфраструктурой
улучшение
помочь
сэкономить
сотни
рублей
slurm
club
khygtd
какие
случаи
компромисс
публикациях
теги
карьера
программиста
ит
специалиста
хабы
голосов
добавить
закладки
сайт
карма
аня
сокол
пользователь
комментировать
публикации
лучшие
сутки
похожие
информация
дата
регистрации
ноября
основания
февраля
численность
местоположение
россия
представитель
антон
скобин
аккаунт
войти
регистрация
разделы
статьи
новости
авторы
песочница
устройство
сайта
авторов
компаний
документы
соглашение
конфиденциальность
услуги
корпоративный
медийная
реклама
нативные
проекты
образовательные
стартапам
спецпроекты
facebook
twitter
vk
telegram
youtube
яндекс
дзен
настройка
языка
техническая
поддержка
старую
habr
