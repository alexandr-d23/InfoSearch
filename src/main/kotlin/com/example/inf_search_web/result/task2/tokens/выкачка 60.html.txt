хабр
открыть
список
стать
автором
потоки
разработка
администрирование
дизайн
менеджмент
маркетинг
научпоп
поиск
профиль
обновить
craxti
часов
основы
генеративно
состязательных
сетей
уровень
сложности
средний
прочтение
мин
количество
просмотров
машинное
обучение
кейс
gan
делать
высоком
уровне
нейронные
сети
учатся
генерировать
реалистичные
образцы
данных
обучались
например
имея
фотографии
рукописных
цифр
узнают
создавать
большего
количества
впечатляюще
научиться
людей
приведенные
человеческие
лица
сгенерированные
одно
вышеперечисленных
лиц
является
реальным
работают
сути
изучают
распределение
интересующего
объекта
обученные
рукописным
цифрам
изучено
выбрать
распределения
создания
реалистичных
изображений
распространение
укрепить
понимание
давайте
рассмотрим
следующий
пример
предположим
следующие
изображение
представляет
сероватый
прямоугольник
простоты
состоит
пикселя
другими
словами
каждом
изображении
пиксель
имеет
возможное
значение
белый
черный
таким
образом
серых
значения
пикселей
знаем
распределении
значений
проверив
большинство
приближаются
крайним
значениям
поэтому
можем
предположить
гауссовским
средним
значением
примечание
наличии
выборок
получить
гауссово
тривиально
вычислив
среднее
стандартное
отклонение
нашей
целью
поскольку
рассчитать
сложным
объектам
сложно
отличие
простого
примера
базовое
нашего
гаусса
полезно
позволяет
выше
создать
похожих
случайным
нарисованных
независимо
обратите
внимание
близки
среднему
небольшими
выбросами
краях
вычисление
лежащего
основе
тривиальным
кошек
собак
автомобилей
любого
другого
сложного
оказывается
математически
неразрешимым
изучаем
сложных
объектов
очевидный
ответ
использовать
достаточно
научить
нейронную
сеть
изучать
любую
сложную
функцию
генератор
модель
обучения
распределению
нейронная
изучает
конкретным
принимает
качестве
входных
случайное
известное
шум
литературе
отображения
отображает
входные
данные
желаемый
результат
фактическим
базовым
распределением
приведенной
архитектуре
отсутствует
ключевой
компонент
какую
потерь
должны
генератора
узнаем
изображения
напоминают
настоящие
рукописные
цифры
используйте
вторая
известна
дискриминатор
противник
роль
дискриминатора
оценке
качества
выходных
технически
двоичный
классификатор
выводит
вероятность
тренировочным
изображением
фальшивым
полученным
изо
сил
пытается
выглядят
реальными
легко
отличить
поддельных
делая
ошибок
двоичным
классификатором
количественно
оценить
производительность
используя
потери
двоичной
кросс
энтропии
являются
важным
сигналом
напомним
ранее
знает
похожи
реальные
bce
сигнала
получения
обратной
связи
сгенерированных
работает
отправляем
выдаваемые
генератором
предсказывает
реально
первоначально
плохой
классифицировать
поддельные
приводит
низким
потерям
временем
улучшается
начинает
ошибочно
классифицируя
высоким
следовательно
потеря
сигнализирует
выводимого
стремится
максимизировать
потерю
использует
показатель
задача
настроить
веса
максимальными
эффективно
обманывая
тренировка
предполагали
отлично
работающий
предположение
неверно
требует
бинарным
процедура
проста
предоставим
дискриминатору
набор
помеченных
реальных
настройки
весов
обучаем
распознавать
предотвращая
обман
история
сетях
соберем
вместе
посмотрим
архитектура
базовой
настоящему
знаете
состоят
взаимосвязанных
обычных
генераторы
дискриминаторы
представляют
простые
прямой
связью
уникально
обучаются
очереди
враждебно
друг
другу
используем
вектор
шума
выбранный
случайного
практике
длины
взятый
гауссовского
вектора
проходят
ряд
полностью
связанных
слоев
нейронной
выход
которое
нашем
примере
mnist
x
массив
передает
свой
вывод
максимизации
помеченные
учится
обучается
помощью
функции
другим
схема
похожа
минимаксную
состязательную
игру
игроков
минимизировать
собственные
создание
собственной
ган
понимаем
теорию
лежащую
применим
создав
собственную
нуля
pytorch
прежде
добавим
библиотека
torchvisionпозволяет
выполним
некоторую
стандартную
нормализацию
сведением
тензору
выравнивание
необходимо
слои
связанными
слоями
import
torch
nn
utils
data
dataloader
torchvision
transforms
datasets
compose
totensor
normalize
std
lambda
view
root
download
true
transform
batch
size
shuffle
num
workers
далее
напишем
код
класса
видели
тензор
выдает
генераторе
размер
плотных
удваивается
каждого
слоя
class
generator
module
accepts
a
tensor
input
outputs
objective
generate
output
indistinguishable
real
digits
def
init
super
layer
sequential
linear
features
leakyrelu
tanh
return
размера
обозначающий
принадлежат
классу
реальное
уменьшаем
вдвое
discriminator
predicted
probabilities
generated
sigmoid
собираемся
класс
включает
содержать
соответствии
схемой
которую
обсуждали
lightning
упростить
сократить
шаблонный
pl
lightningmodule
epoch
images
noise
vector
test
noises
save
list
progression
plotting
randn
device
z
generates
image
step
training
sample
random
pass
classify
backprop
loss
shape
imgs
d
squeeze
maximize
s
equivalent
minimizing
labels
flipped
i
e
y
fake
minimize
function
maximizing
g
bceloss
actual
predict
combine
zeros
idx
optimizer
train
configure
optimizers
optim
adam
parameters
lr
append
обучить
обучать
графического
процессора
течение
эпох
cuda
cpu
model
trainer
max
epochs
gpus
fit
визуализация
осталось
визуализировать
сохраняли
выводимые
каждой
эпохи
нанеся
сетку
приведенный
выбирает
й
наносит
numpy
np
matplotlib
pyplot
plt
gridspec
convert
array
detach
plot
nrow
ncol
randomly
select
indexes
choice
range
replace
false
fig
figure
figsize
suptitle
format
fontsize
gs
wspace
hspace
top
bottom
left
j
img
reshape
ax
subplot
imshow
cmap
gray
axis
обещано
создадим
анимацию
показанную
вверху
поста
funcanimationфункцию
анимировать
графике
кадр
кадром
rc
animation
funcanimation
html
jshtml
animate
frame
ret
axes
anim
frames
interval
blit
поздравляю
дошли
конца
урока
надеюсь
понравилось
читать
писать
теги
python
хабы
голосов
добавить
закладки
комментарии
карма
рейтинг
александр
developer
комментировать
публикации
лучшие
сутки
похожие
истории
работа
scientist
вакансий
вакансии
аккаунт
войти
регистрация
разделы
новости
компании
авторы
песочница
информация
устройство
сайта
авторов
компаний
документы
соглашение
конфиденциальность
услуги
корпоративный
блог
медийная
реклама
нативные
проекты
образовательные
программы
стартапам
мегапроекты
facebook
twitter
vk
telegram
youtube
яндекс
дзен
настройка
языка
техническая
поддержка
вернуться
старую
версию
habr
